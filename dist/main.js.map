{"version":3,"file":"main.js","sources":["../src/constants/index.ts","../src/service/index.ts","../src/routers/index.tsx","../src/app.tsx","../src/main.tsx"],"sourcesContent":["export const INSTRUCTION = [\n  {\n    name: \"about\",\n  },\n  {\n    name: \"posts\",\n  },\n  {\n    name: \"reprint\",\n  },\n  {\n    name: \"help\",\n  },\n  {\n    name: \"list\",\n  },\n  {\n    name: \"ls\",\n  },\n  {\n    name: \"clear\",\n  },\n];\n\nexport const HELPLIST = [\n  { name: \"help\", hint: \"show details\" },\n  { name: \"list/ls\", hint: \"list all commands:\", component: \"ListComp\" },\n  { name: \"clear\", hint: \"clear all outputs\" },\n  { name: \"about\", hint: \"some information about me\" },\n  { name: \"posts\", hint: \"list all posts\" },\n  { name: \"reprint\", hint: \"list all Reprint\" },\n];\n\nexport interface postsArrType {\n  name: string;\n  time: string;\n  link: string;\n}\n\nexport const POSTSLIST: postsArrType[] = [\n  {\n    name: \"Rollup基本概念与使用\",\n    time: \"2024-03-11\",\n    link: \"rollup\",\n  },\n  {\n    name: \"从构建开始的Lit开发\",\n    time: \"2024-02-28\",\n    link: \"lit-pro\",\n  },\n  {\n    name: \"看完本篇，教你用Lit实现简单组件开发\",\n    time: \"2024-02-28\",\n    link: \"lit\",\n  },\n\n  {\n    name: \"web components基础使用指南\",\n    time: \"2024-04-23\",\n    link: \"web-components\",\n  },\n];\n","export interface NoteItem {\n  id: number;\n  title: string;\n  content: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\n// 使用代理路径\nconst API_BASE_URL = '/api';\n\nexport const getNoteList = async (): Promise<NoteItem[]> => {\n  try {\n    const url = `${API_BASE_URL}/post/fixedlist/1`;\n    const response = await fetch(url, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n\n    return data?.data;\n  } catch (error) {\n    console.error('Error fetching notes:', error);\n    throw error;\n  }\n}; \n\n\nexport const getNoteDetail = async (id: string): Promise<NoteItem> => {\n  try {\n    const url = `${API_BASE_URL}/post/detail/${id}`;\n    const response = await fetch(url, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n\n    return data?.data;\n  } catch (error) {\n    console.error('Error fetching note detail:', error);\n    throw error;\n  }\n};\n","import React from \"react\";\nimport Home from \"../pages/home\";\nimport Posts from \"../pages/posts\";\nimport Mdx from \"../component/Mdx/index\";\nimport Postspage from \"../pages/posts/page\";\nimport Reprint from \"../pages/reprint\";\nimport About from \"../pages/about\";\n\nconst routers = [\n  {\n    path: \"/\",\n    element: <Home />,\n    children: [\n      {\n        path: \"/home\",\n        element: <Home />,\n      },\n    ],\n  },\n  {\n    path: \"/posts\",\n    element: <Postspage />,\n    children: [\n      {\n        path: \"/posts\",\n        element: <Posts />,\n      },\n      {\n        path: \"/posts/:id\",\n        element: <Mdx />,\n      },\n    ],\n  },\n\n  {\n    path: \"/reprint\",\n    element: <Reprint />,\n  },\n  {\n    path: \"/about\",\n    element: <About />,\n  },\n];\nexport default routers;\n","import React from \"react\";\nimport style from \"./style/index.module.scss\";\nimport { useRoutes } from \"react-router-dom\";\nimport routers from \"./routers/index\";\nimport Header,{Nav} from \"./pages/header\";\nimport \"./style/root.css\"\nimport { MarkdownProvider } from './hooks/MarkdownContext';\n\nconst App = () => {\n  const ele = useRoutes(routers);\n  return (\n    <MarkdownProvider>\n      <div className={style.main}>\n        <Nav/>\n        <Header/>\n        {ele}\n      </div> \n    </MarkdownProvider>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./app\";\nimport { BrowserRouter } from \"react-router-dom\";\nconst root = document.getElementById(\"root\");\nReactDOM.createRoot(root!).render(\n  <BrowserRouter>\n    <App></App>\n  </BrowserRouter>\n);  "],"names":["Postspage","Mdx","ReactDOM"],"mappings":"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"}